#! /usr/bin/env python

PACKAGE='jsk_perception'
try:
    import imp
    imp.find_module(PACKAGE)
    from dynamic_reconfigure.parameter_generator_catkin import *
except:
    import roslib; roslib.load_manifest(PACKAGE)
    from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("nmixtures", int_t, 0, "the number of gaussian mixture", 10, 1, 10)
gen.add("detect_shadows", bool_t, 0, "detect shadow", True)
gen.add("bilateral_d", int_t, 0, "d of bilateral", 20, 1, 200)
gen.add("bilateral_sigma_color", double_t, 0, "sigma color of bilateral", 200, 0, 300)
gen.add("bilateral_sigma_space", double_t, 0, "sigma space bilateral", 40, 0, 300)
gen.add("thresh", double_t, 0, "last threshold value", 145.0, 0.0, 256.0)
gen.add("gamma", double_t, 0, "gamma for gamma transformation", 1.0, 0.0, 256.0)


#BS params
gen.add("complexity_reduction_threshold", double_t, 0, "complexity_reduction_threshold", 0.1, 0.0, 10.0)
gen.add("shadow_threshold", double_t, 0, "shadow_threshold", 1.2, 0.0, 10.0)
gen.add("var_threshold", double_t, 0, "var_threshold", 107, 0.0, 256.0)
gen.add("shadow_value", int_t, 0, "shadow_value", 110, 1, 256)
gen.add("history", int_t, 0, "history", 5, 1, 1000)
gen.add("background_ratio", double_t, 0, "background_ratio", 0.9, 0.0, 256.0)


#Others
gen.add("use_bilateral", bool_t, 0, "use bilateral", False)
gen.add("use_lut", bool_t, 0, "use lut", False)
gen.add("scale", double_t, 0, "scale pyramid", 1.0, 0.0, 4.0)
gen.add("times", int_t, 0, "erode and delite times", 1, 0, 10)


exit(gen.generate(PACKAGE, "jsk_perception", "BackgroundSubstraction"))
